#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üîç Running pre-commit hooks..."

# Run lint-staged for code quality and security checks
npx lint-staged

# Additional security checks for all staged files
echo "üîê Running additional security validations..."

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

# Check for common security issues in commit
if echo "$STAGED_FILES" | grep -E '\.(env|pem|key|cert|crt|p12|pfx)$'; then
  echo "${RED}‚ùå Attempting to commit sensitive files!${NC}"
  echo "Found files with sensitive extensions. These should not be committed."
  echo "Add them to .gitignore instead."
  exit 1
fi

# Check for package-lock.json without package.json changes
if echo "$STAGED_FILES" | grep -q "package-lock.json" && ! echo "$STAGED_FILES" | grep -q "package.json"; then
  echo "${YELLOW}‚ö†Ô∏è  package-lock.json changed without package.json${NC}"
  echo "This might indicate a manual edit. Make sure this is intentional."
fi

# Run tests for changed files if available
if [ -f "package.json" ] && grep -q "test:related" package.json && echo "$STAGED_FILES" | grep -qE '\.(ts|tsx|js|jsx)$'; then
  echo "üß™ Running tests for changed files..."
  npm run test:related $STAGED_FILES || {
    echo "${RED}‚ùå Tests failed! Fix failing tests before committing.${NC}"
    exit 1
  }
fi

# TypeScript type checking for changed files
if echo "$STAGED_FILES" | grep -qE '\.tsx?$'; then
  echo "üìù Running TypeScript type checks..."
  npx tsc --noEmit || {
    echo "${RED}‚ùå TypeScript errors found! Fix type errors before committing.${NC}"
    exit 1
  }
fi

echo "${GREEN}‚úÖ All pre-commit checks passed!${NC}"
