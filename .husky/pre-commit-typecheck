#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

echo "üîç Running TypeScript type check..."

# Run TypeScript compiler in no-emit mode
npx tsc --noEmit --pretty

if [ $? -ne 0 ]; then
  echo ""
  echo "‚ùå TypeScript type errors detected!"
  echo "Please fix the type errors before committing."
  echo ""
  echo "To see all errors, run: npx tsc --noEmit"
  echo "To bypass (NOT RECOMMENDED): git commit --no-verify"
  exit 1
fi

echo "‚úÖ TypeScript type check passed!"

# Check for 'any' types in staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx)$')

if [ -n "$STAGED_FILES" ]; then
  echo "üîç Checking for 'any' types in staged files..."
  
  ANY_COUNT=0
  for FILE in $STAGED_FILES; do
    # Skip test files and type definition files
    if [[ "$FILE" == *".test."* ]] || [[ "$FILE" == *".spec."* ]] || [[ "$FILE" == *".d.ts" ]]; then
      continue
    fi
    
    # Count 'any' types (excluding comments)
    COUNT=$(grep -c ": any\|<any>\| any\[\]\| any)\| any,\|:any" "$FILE" 2>/dev/null || echo 0)
    if [ "$COUNT" -gt 0 ]; then
      echo "  ‚ö†Ô∏è  $FILE contains $COUNT 'any' type(s)"
      ANY_COUNT=$((ANY_COUNT + COUNT))
    fi
  done
  
  if [ $ANY_COUNT -gt 0 ]; then
    echo ""
    echo "‚ö†Ô∏è  Warning: $ANY_COUNT 'any' type(s) found in staged files"
    echo "Consider using proper types instead of 'any'"
    echo ""
  fi
fi

exit 0