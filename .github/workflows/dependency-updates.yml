name: Dependency Updates & Security

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: |
          echo "Running security audit..."
          pnpm audit --audit-level moderate || echo "Security audit completed with warnings"

      - name: Run dependency vulnerability check
        run: |
          echo "Checking for known vulnerabilities..."
          npx audit-ci --moderate || echo "Vulnerability check completed"

  dependency-updates:
    name: Automated Dependency Updates
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Update dependencies
        run: |
          echo "Updating dependencies..."
          pnpm update --latest || echo "Dependency update completed with warnings"

      - name: Check for changes
        id: changes
        run: |
          git diff --exit-code pnpm-lock.yaml || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update dependencies"
          title: "ðŸ”„ Automated dependency updates"
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated dependency updates.
            
            ### Changes
            - Updated dependencies to latest versions
            - Security patches applied where available
            
            ### Testing
            - [ ] Run full test suite after merge
            - [ ] Verify no breaking changes
            - [ ] Check for any new security warnings
            
            ### Notes
            This PR was created automatically by the dependency update workflow.
            Please review the changes and test thoroughly before merging.
            
            ðŸ¤– Generated by GitHub Actions
          branch: automated-dependency-updates
          delete-branch: true

  security-monitoring:
    name: Security Monitoring
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Run comprehensive security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "json"
          output: "trivy-results.json"

      - name: Process security results
        run: |
          echo "Processing security scan results..."
          
          # Count vulnerabilities by severity
          HIGH_COUNT=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity == "HIGH") | .VulnerabilityID' trivy-results.json | wc -l)
          CRITICAL_COUNT=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity == "CRITICAL") | .VulnerabilityID' trivy-results.json | wc -l)
          
          echo "Critical vulnerabilities: $CRITICAL_COUNT"
          echo "High vulnerabilities: $HIGH_COUNT"
          
          # Create summary file
          echo "# Security Scan Summary" > security-summary.md
          echo "- Critical vulnerabilities: $CRITICAL_COUNT" >> security-summary.md
          echo "- High vulnerabilities: $HIGH_COUNT" >> security-summary.md
          echo "- Scan date: $(date -u)" >> security-summary.md
          
          # If critical vulnerabilities found, create issue
          if [ "$CRITICAL_COUNT" -gt 0 ]; then
            echo "CRITICAL_FOUND=true" >> $GITHUB_ENV
          fi

      - name: Create security issue if critical vulnerabilities found
        if: env.CRITICAL_FOUND == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('security-summary.md', 'utf8');
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Critical Security Vulnerabilities Detected',
              body: `## Security Alert\n\nCritical vulnerabilities have been detected in the codebase.\n\n${summary}\n\n### Action Required\n- Review the security scan results\n- Update affected dependencies immediately\n- Test thoroughly after updates\n\n### Scan Results\nDetailed results are available in the workflow artifacts.\n\nðŸ¤– This issue was created automatically by the security monitoring workflow.`,
              labels: ['security', 'critical', 'automated']
            });

      - name: Upload security results
        uses: actions/upload-artifact@v4
        with:
          name: security-results
          path: |
            trivy-results.json
            security-summary.md
          retention-days: 90