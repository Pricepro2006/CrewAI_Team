# CrewAI Team Environment Configuration
# SECURITY WARNING: Never commit this file with real values!
# This is a template - copy to .env and fill in your actual values

# API Configuration
API_PORT=3001
NODE_ENV=development
PORT=3000

# Database Configuration
DATABASE_PATH=./data/crewai_enhanced.db
WALMART_DB_PATH=./data/walmart_grocery.db
DATABASE_POOL_SIZE=10
DATABASE_TIMEOUT=5000

# Llama.cpp Configuration (Primary LLM)
# Required: Update paths to match your installation
LLAMA_SERVER_URL=http://localhost:8081
LLAMA_CPP_PATH=/path/to/CrewAI_Team/llama.cpp/build/bin/llama-cli
LLAMA_SERVER_PATH=/path/to/CrewAI_Team/llama.cpp/build/bin/llama-server
LLAMA_MODELS_PATH=/path/to/CrewAI_Team/models
LLAMA_PROFILE=balanced
LLAMA_MODEL=llama-3.2-3b-instruct.Q4_K_M.gguf
LLAMA_TIMEOUT=60000
LLAMA_GPU_LAYERS=0
LLAMA_CONTEXT_SIZE=8192
LLAMA_THREADS=8

# Llama.cpp Performance Profiles:
# - fast: 8 threads, 2048 context, 256 batch (low latency)
# - balanced: 12 threads, 4096 context, 512 batch (recommended)
# - quality: 14 threads, 8192 context, 1024 batch (high quality)  
# - memory: 10 threads, 16384 context, 2048 batch (large context)
# - batch: 16 threads, 4096 context, 2048 batch (high throughput)

# Optional Advanced Llama.cpp Settings:
# LLAMA_THREADS=12          # Override thread count
# LLAMA_CONTEXT=4096        # Override context size
# LLAMA_BATCH=512           # Override batch size
# LLAMA_UBATCH=256          # Override micro-batch size
# LLAMA_PARALLEL=4          # Override parallel processing
# LLAMA_HOST=127.0.0.1      # Server bind address (SECURITY: localhost only)
# LLAMA_PORT=8081           # Server port

# Ollama Configuration (Backup/Fallback - optional)
# OLLAMA_BASE_URL=http://localhost:11434
# OLLAMA_TIMEOUT=120000

# ChromaDB Configuration
CHROMA_BASE_URL=http://localhost:8000
CHROMA_COLLECTION_NAME=crewai_documents

# Redis Configuration (for BullMQ)
REDIS_HOST=localhost
REDIS_PORT=6379

# Microsoft Graph Configuration
# SECURITY CRITICAL: Get these from Azure App Registration
# Portal: https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps
MSGRAPH_CLIENT_ID=your-azure-client-id-here
MSGRAPH_TENANT_ID=your-azure-tenant-id-here
MSGRAPH_CLIENT_SECRET=generate-using-scripts/generate-secure-secrets.js

# Webhook Configuration
WEBHOOK_URL=https://your-domain.com/api/webhooks/microsoft-graph
WEBHOOK_CLIENT_STATE=generate-using-scripts/generate-secure-secrets.js

# Email Processing Configuration
EMAIL_BATCH_SIZE=50
SUBSCRIPTION_RENEWAL_MINUTES=30

# JWT Configuration
# SECURITY CRITICAL: Generate strong secret using: node scripts/generate-secure-secrets.js
JWT_SECRET=generate-using-scripts/generate-secure-secrets.js
JWT_EXPIRES_IN=7d

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=json

# Security Configuration
RATE_LIMIT_WINDOW=15
RATE_LIMIT_MAX_REQUESTS=100

# File Upload Configuration
UPLOAD_MAX_SIZE=10485760
UPLOAD_ALLOWED_TYPES=.pdf,.txt,.md,.json,.csv,.xlsx,.docx,.oft

# WebSocket Configuration
WS_PORT=3001
WS_HEALTH_INTERVAL=30000

# Pricing Microservice Configuration
PRICING_SERVICE_PORT=3003

# Memory Cache Configuration
MEMORY_CACHE_SIZE=10000
MEMORY_CACHE_TTL=300

# Redis Cache Configuration
REDIS_CACHE_TTL=3600
REDIS_KEY_PREFIX=price:
REDIS_PASSWORD=
REDIS_DB=0

# SQLite Cache Configuration
SQLITE_CACHE_TTL=86400
SQLITE_PATH=./data/price_cache.db

# Walmart API Configuration
# SECURITY CRITICAL: Get from Walmart Developer Portal
WALMART_API_URL=https://api.walmart.com
WALMART_API_KEY=your-walmart-api-key-here
API_RATE_LIMIT=10
API_TIMEOUT=5000
API_RETRIES=3

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:3003