# Multi-stage Docker build for Walmart Grocery Agent
# Optimized for local deployment with production features

# ============================================================================
# Stage 1: Base dependencies and build tools
# ============================================================================
FROM node:20.11.0-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    sqlite \
    curl \
    && ln -sf python3 /usr/bin/python

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./
COPY config/ ./config/

# ============================================================================
# Stage 2: Install dependencies
# ============================================================================
FROM base AS deps

# Install all dependencies for building
RUN npm ci --prefer-offline --no-audit

# Copy source code
COPY src/ ./src/
COPY public/ ./public/
COPY vite.config.ts ./
COPY vitest.config.ts ./

# ============================================================================
# Stage 3: Build application
# ============================================================================
FROM deps AS builder

# Build the application
ENV NODE_ENV=production
RUN npm run build:production

# ============================================================================
# Stage 4: Production runtime
# ============================================================================
FROM node:20.11.0-alpine AS production

# Install runtime dependencies only
RUN apk add --no-cache \
    sqlite \
    curl \
    tini

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S walmart -u 1001

WORKDIR /app

# Copy package files and install production dependencies only
COPY package*.json ./
RUN npm ci --production --prefer-offline --no-audit && \
    npm cache clean --force

# Copy built application from builder stage
COPY --from=builder --chown=walmart:nodejs /app/dist ./dist
COPY --from=builder --chown=walmart:nodejs /app/public ./public

# Copy database and configuration files
COPY --chown=walmart:nodejs data/walmart_grocery.db ./data/
COPY --chown=walmart:nodejs src/database/migrations/ ./src/database/migrations/

# Create necessary directories with proper permissions
RUN mkdir -p logs tmp && \
    chown -R walmart:nodejs /app

# Switch to non-root user
USER walmart

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Expose ports
EXPOSE 3000

# Use tini as entrypoint for proper signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Start the application
CMD ["node", "dist/api/server.js"]