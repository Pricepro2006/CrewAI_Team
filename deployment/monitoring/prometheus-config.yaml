# 2025 Best Practice: Prometheus configuration for comprehensive monitoring
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s
      external_labels:
        cluster: 'production'
        app: 'email-dashboard'
    
    # Alertmanager configuration
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093
    
    # Load rules
    rule_files:
      - '/etc/prometheus/rules/*.yml'
    
    # Scrape configurations
    scrape_configs:
    # Email Dashboard metrics
    - job_name: 'email-dashboard'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - production
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        action: keep
        regex: email-dashboard
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
    
    # Kubernetes API server
    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https
    
    # Node metrics
    - job_name: 'kubernetes-nodes'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

---
# Alert Rules
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: monitoring
data:
  email-dashboard-alerts.yml: |
    groups:
    - name: email-dashboard
      interval: 30s
      rules:
      # High Error Rate
      - alert: HighErrorRate
        expr: |
          rate(http_requests_total{app="email-dashboard", status=~"5.."}[5m]) > 0.05
        for: 5m
        labels:
          severity: critical
          team: email-team
        annotations:
          summary: "High error rate on {{ $labels.instance }}"
          description: "Error rate is {{ $value | humanizePercentage }} for the last 5 minutes"
      
      # High Response Time
      - alert: HighResponseTime
        expr: |
          histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{app="email-dashboard"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
          team: email-team
        annotations:
          summary: "High response time on {{ $labels.instance }}"
          description: "95th percentile response time is {{ $value }}s"
      
      # Pod Down
      - alert: PodDown
        expr: |
          up{app="email-dashboard"} == 0
        for: 1m
        labels:
          severity: critical
          team: email-team
        annotations:
          summary: "Pod {{ $labels.pod }} is down"
          description: "Pod has been down for more than 1 minute"
      
      # High Memory Usage
      - alert: HighMemoryUsage
        expr: |
          container_memory_usage_bytes{pod=~"email-dashboard-.*"} / 
          container_spec_memory_limit_bytes{pod=~"email-dashboard-.*"} > 0.9
        for: 5m
        labels:
          severity: warning
          team: email-team
        annotations:
          summary: "High memory usage on {{ $labels.pod }}"
          description: "Memory usage is {{ $value | humanizePercentage }}"
      
      # High CPU Usage
      - alert: HighCPUUsage
        expr: |
          rate(container_cpu_usage_seconds_total{pod=~"email-dashboard-.*"}[5m]) > 0.8
        for: 5m
        labels:
          severity: warning
          team: email-team
        annotations:
          summary: "High CPU usage on {{ $labels.pod }}"
          description: "CPU usage is {{ $value | humanizePercentage }}"
      
      # Database Connection Pool Exhausted
      - alert: DatabaseConnectionPoolExhausted
        expr: |
          email_dashboard_db_pool_available{app="email-dashboard"} == 0
        for: 1m
        labels:
          severity: critical
          team: email-team
        annotations:
          summary: "Database connection pool exhausted"
          description: "No available database connections for {{ $labels.instance }}"
      
      # WebSocket Connection Failures
      - alert: WebSocketConnectionFailures
        expr: |
          rate(email_dashboard_websocket_failures_total{app="email-dashboard"}[5m]) > 10
        for: 5m
        labels:
          severity: warning
          team: email-team
        annotations:
          summary: "High WebSocket failure rate"
          description: "WebSocket failures: {{ $value }} per second"
      
      # Email Processing Lag
      - alert: EmailProcessingLag
        expr: |
          email_dashboard_processing_lag_seconds{app="email-dashboard"} > 300
        for: 5m
        labels:
          severity: warning
          team: email-team
        annotations:
          summary: "Email processing lag detected"
          description: "Processing lag is {{ $value }}s"

---
# Grafana Dashboard
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-email
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  email-dashboard.json: |
    {
      "dashboard": {
        "title": "Email Dashboard Monitoring",
        "panels": [
          {
            "title": "Request Rate",
            "targets": [
              {
                "expr": "rate(http_requests_total{app=\"email-dashboard\"}[5m])"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "title": "Error Rate",
            "targets": [
              {
                "expr": "rate(http_requests_total{app=\"email-dashboard\", status=~\"5..\"}[5m])"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "title": "Response Time (p95)",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{app=\"email-dashboard\"}[5m]))"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "title": "Active WebSocket Connections",
            "targets": [
              {
                "expr": "email_dashboard_websocket_connections{app=\"email-dashboard\"}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          },
          {
            "title": "CPU Usage",
            "targets": [
              {
                "expr": "rate(container_cpu_usage_seconds_total{pod=~\"email-dashboard-.*\"}[5m])"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 16}
          },
          {
            "title": "Memory Usage",
            "targets": [
              {
                "expr": "container_memory_usage_bytes{pod=~\"email-dashboard-.*\"}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 16}
          }
        ]
      }
    }